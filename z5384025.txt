Week1:
Communicate with classmates to form teams and discuss the choice of the project.

Week2:
Complete some tasks required for team formation, such as creating and joining GitHub repositories. 
Learn and review backend technologies that may be needed for the project.

Week3:
Have a meeting with the client to understand project requirements and scope. 
Collaborate with teammates to complete the proposal.
Attempted to connect to the server database following the client's method but encountered a failure.

Week4:
Still working on the database connection problem, one problem solved, anothor pop out.
Implemented the connection between the front-end and back-end, with the front-end calling the back-end's API.

Week5:
The database connection has been successfully established. 
Several SQL queries have been executed to retrieve the required data from the database, 
such as user account passwords, appointments for specific dates, and more. 
Additionally, several backend APIs that are needed for the frontend have been implemented.

Week6:
Based on the API documentation provided by classmates, I understood the front-end requirements, 
further improved and optimized the SQL statements, and added data processing for the returned data.

Week7:
Following the lecture's advice, I created a mock-up database using PostgreSQL, mimicking the table structure of the database provided by the user. 
This database will be used for the development and testing of the website's functionality in the future.
Several APIs created for add, delete, edit database.

Week8:
According to the requirements of the frontend, numerous APIs have been added and improved. 
The APIs for scheduling have been enhanced with additions and modifications, 
and the APIs for user login and registration have been refined. The API for viewing patient records has also been improved, 
and some auxiliary APIs have been added.

Week9:
Following the lecture's advice, statistical functionality has been added, 
allowing the counting of the number of appointments in different states within a specific time period, 
as well as the total number of appointments at different days.
An admin user account has been created, who can access records of all doctors and patients, 
and view summary data charts.
Deployed postgresql cloud database using Google Cloud.